{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Backend Engineer coding API test for Xendit",
    "description": "All API URL to meet the criteria for backend engineer recruitment at Xendit",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:8010",
  "basePath": "/",
  "tags": [
    {
      "name": "Health",
      "description": "All API for health url in the system"
    },
    {
      "name": "Rides",
      "description": "All API information about driver url in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Check API health",
        "tags": [
          "Health"
        ],
        "description": "Check the availability API in response",
        "responses": {
          "200": {
            "description": "Healthy"
          }
        }
      }
    },
    "/rides/{page}/{limit}": {
      "parameters": [{
          "name": "page",
          "in": "path",
          "required": true,
          "description": "Page of number",
          "type": "number"
        },
        {
          "name": "limit",
          "in": "path",
          "required": true,
          "description": "Limit data that responds want to return",
          "type": "number"
        }
      ],
      "get": {
        "summary": "To request driver data with pagination",
        "tags": [
          "Rides"
        ],
        "description": "Request driver data with pagination",
        "responses": {
          "200": {
            "description": "Return a set of paginated data in Rides",
            "schema": {
              "$ref": "#/definitions/Rides"
            }
          }
        }
      }
    },
    "/rides": {
      "parameters": [{
        "name": "ride",
        "in": "body",
        "description": "Driver with new values of properties",
        "schema": {
          "$ref": "#/definitions/RideRequest"
        }
      }],
      "post": {
        "summary": "To create driver data",
        "tags": [
          "Rides"
        ],
        "description": "Create driver data",
        "responses": {
          "200": {
            "description": "Return a created driver data with Ride model",
            "schema": {
              "$ref": "#/definitions/RideCreatedRequest"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Ride": {
      "properties": {
        "startLat": {
          "type": "number"
        },
        "startLong": {
          "type": "number"
        },
        "endLat": {
          "type": "number"
        },
        "endLong": {
          "type": "number"
        },
        "riderName": {
          "type": "string"
        },
        "driverName": {
          "type": "string"
        },
        "driverVehicle": {
          "type": "string"
        },
        "created": {
          "type": "string"
        }
      }
    },
    "Rides": {
      "type": "array",
      "$ref": "#/definitions/Ride"
    },
    "RideRequest": {
      "properties": {
          "startLat": {
            "type": "number"
          },
          "startLong": {
            "type": "number"
          },
          "endLat": {
            "type": "number"
          },
          "endLong": {
            "type": "number"
          },
          "riderName": {
            "type": "string"
          },
          "driverName": {
            "type": "string"
          },
          "driverVehicle": {
            "type": "string"
          }
      }
    },
    "RideCreatedRequest": {
      "properties": {
          "rideId" : {
            "type": "number"
          },
          "startLat": {
            "type": "number"
          },
          "startLong": {
            "type": "number"
          },
          "endLat": {
            "type": "number"
          },
          "endLong": {
            "type": "number"
          },
          "riderName": {
            "type": "string"
          },
          "driverName": {
            "type": "string"
          },
          "driverVehicle": {
            "type": "string"
          },
          "created" : {
            "type": "string"
          }
      }
    }
  }
}